enum Status {
  CONFIRMED
  PENDING
  REJECTED
  BLOCKED
}

enum FriendshipMutationType {
  CREATED
  UPDATED
  DELETED
}

type Friendship {
  id: Int!
  friend_id: Int!
  friend: User!
  status: Status!
  updatedAt: Date!
  attemptsCount: Int!
  requestCreator: Boolean!
  requestCreatorInfo: User
}

input CreateFriendshipInput {
  friend_id: Int!
}

input UpdateStatusInput {
  id: Int!
  status: Status
}

input UpdateCreatorInput {
  id: Int!
  friend_id: Int!
}

type Query {
  friendships(userId: Int!): [Friendship]
  friendsRequests: [Friendship]!
}

type Mutation {
  createFriendship(createFriendshipInput: CreateFriendshipInput!): Friendship!
  removeFriendship(id: Int!): Friendship!
  updateStatus(updateStatusInput: UpdateStatusInput!): Boolean!
  updateCreator(id: Int!): Friendship!
}

type Subscription {
  friendshipMutated(userId: Int!): FriendshipMutatedPayload
}

type FriendshipMutatedPayload {
  mutation: FriendshipMutationType!
  node: Friendship!
}
